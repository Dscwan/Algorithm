import java.util.*;
class Solution {
    public long solution(int[] weights) {
        long answer = 0;
        int N = weights.length;
        Arrays.sort(weights);
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i=0;i<N;i++){
            if(map.get(weights[i])==null) map.put(weights[i],1);
            else map.put(weights[i],map.get(weights[i])+1);
        }
        Set<Integer> set = map.keySet();
        for(Integer key : set){
            long temp = map.get(key); // long **
            if(temp > 1) answer += (long)((temp-1)*temp)/2; // 같은 값
            if(map.get(key*2)!=null) answer += (long)map.get(key*2)*temp; // 2m,4m
            if(key%3 == 0){
                if(map.get((key*4)/3)!=null) answer += (long)map.get((key*4)/3)*temp; // 3m, 4m
            }
            if(key%2 == 0){
                if(map.get((key*3)/2)!=null) answer += (long)map.get((key*3)/2)*temp; // 2m,3m
            }
        }
        return answer;
    }
}
